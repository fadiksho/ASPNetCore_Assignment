@model PersonViewModel
@{
	var queryParamsDictonary = Context.Request.Query.ToDictionary(q => q.Key, q => q.Value.ToString());
	string queryParams = "?";
	var queryString = Context.Request.QueryString;
	string url = Url.Action("Filter", "Person") + queryString;
	foreach (var param in queryParamsDictonary)
	{
		queryParams += $"{param.Key}={param.Value}&";
	}
}
<nav aria-label="Page navigation example">
	<ul class="pagination justify-content-center">
		<li class="page-item @(Model.PersonPagingResult.HasPrevious ? "" : "disabled")">
			<a data-ajax="true"
				 data-ajax-loading="#personListLoaderId"
				 data-ajax-method="GET"
				 data-ajax-mode="replace"
				 data-ajax-update="#personListId"
				 data-ajax-url="@Url.Action("Filter", "Person", new {
										 page = Model.PersonPagingResult.CurrentPage - 1,
										 pageSize = Model.Query.PageSize,
										 Filter = Model.Query.Filter,
										 CaseSensitive = Model.Query.CaseSensitive,
										 Descending = Model.Query.Descending
									 })"
				 class=" page-link">Previous</a>
		</li>
		@for (int i = 1; i <= Model.PersonPagingResult.TotalPages; i++)
		{
			<li class="page-item @(Model.PersonPagingResult.CurrentPage == i ? "active" : "")">
				<a data-ajax="true"
					 data-ajax-loading="#personListLoaderId"
					 data-ajax-method="GET"
					 data-ajax-mode="replace"
					 data-ajax-update="#personListId"
					 data-ajax-url="@Url.Action("Filter", "Person", new {
										 page = i,
										 pageSize = Model.Query.PageSize,
										 Filter = Model.Query.Filter,
										 CaseSensitive = Model.Query.CaseSensitive,
										 Descending = Model.Query.Descending
									 })"
					 class="page-link">@i</a>
				</li>
			}
		<li class="page-item @(Model.PersonPagingResult.HasNext ? "" : "disabled")">
			<a data-ajax="true"
				 data-ajax-loading="#personListLoaderId"
				 data-ajax-method="GET"
				 data-ajax-mode="replace"
				 data-ajax-update="#personListId"
				 data-ajax-url="@Url.Action("Filter", "Person", new {
										 page = Model.PersonPagingResult.CurrentPage + 1,
										 pageSize = Model.Query.PageSize,
										 Filter = Model.Query.Filter,
										 CaseSensitive = Model.Query.CaseSensitive,
										 Descending = Model.Query.Descending
									 })"
				 class="page-link">Next</a>
		</li>
	</ul>
</nav>